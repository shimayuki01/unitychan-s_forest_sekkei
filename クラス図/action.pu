@startuml

class InputKey{
    ユーザから入力を受け取る
    KeyCode OnKeyDown
    bool OnShiftKeyDown 
    Vector2 OnDownWASD 
    
}

class Action{
    OnKeyDown,OnShiftKeyDown,OnDownWASD
    上記のイベントにアクションを登録する。
}

class ActionEvent{
    登録するアクションの定義
    Walk()
    Cook()
    PickUpItem()
}




InputKey <-- Action
Action --> ActionEvent
ActionEvent --> Player

class SE{
    playMusic()
}

folder Player{

interface IPlayerItem{
    void Use()
}



interface IPlayerMove{
    void Walk()
    void Run()
}


interface IBag{
    Dictionary<string, int> getBagSummary()
    void inItem(string itemId, int num)
    void outItem()
}

interface IManager{
    void doCook(string cookItem_id)
}

class Animeation{
    \\走ってるときに斧を振ったら強制的に止まって斧を振る
    \\斧を振る->移動の入力を受け取らない
}


class Player
{
    int hp
    IOno playerOno
    IBag playerBag
    IManger Cook

    + int getPlayerOnoLv()
    + int getPlayerOnoAtk() 
    + Bag getPlayerBag()
    + healHp(int heal_point)
    + cook(string cookItem_id)
    + Dictionary<string, int> getBagSummary()
}


interface ICookItemSozaiAcquisition{
    Sozai[] getCookItemSozai(string cookItem_id)
}

interface IItemConsumption{
    void inItem(string itemId, int num)
    void subItemQuantity(string item_id, int num)
    List getInItemArgumentList()
}
class Cook{
    - [Serialize]IItemConsumption bag
    + doCook(string cookItem_id)
    - deleteSozaiBag(sozai[])
}

class Move{
    moveSpeed
    void Move(GameObject gemeobject, vecter2 WalkMove, float moveSpeed)
    {
        animation
    }
}
}


Player-->IBag
Player-->IPlayerItem
Player-->IManager
Player-->IPlayerMove
Item--.up|>IPlayerItem
Bag--.up|>IBag
Bag--.up|>IItemConsumption
Bag--> Block
Cook-.up|>IManager
Cook-->IItemConsumption
Cook-->ICookItemSozaiAcquisition
GameData-->Items
GameData-.|>ICookItemSozaiAcquisition
Move-.up|>IPlayerMove
Animeation 